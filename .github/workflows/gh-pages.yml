name: Deploy GH Pages (Actions)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install
        run: npm install --no-audit --no-fund

      - name: Build
        run: npm run build

      # Detect publish directory; handle SSR layouts that emit index.csr.html
      - name: Resolve publish directory
        id: publishdir
        shell: bash
        run: |
          set -euo pipefail
          root="dist/el-gaon"
          pick_index() {
            local dir="$1"
            if [[ -f "$dir/index.html" ]]; then
              echo "$dir"
              return 0
            fi
            if [[ -f "$dir/index.csr.html" ]]; then
              cp "$dir/index.csr.html" "$dir/index.html"
              echo "$dir"
              return 0
            fi
            return 1
          }

          PUBLISH_DIR=""
          if [[ -d "$root/browser" ]] && pick_index "$root/browser" >/dev/null; then
            PUBLISH_DIR="$root/browser"
          elif [[ -d "$root" ]] && pick_index "$root" >/dev/null; then
            PUBLISH_DIR="$root"
          else
            cand=$(find dist -maxdepth 5 -type f \( -name index.html -o -name index.csr.html \) | head -n1 || true)
            if [[ -z "$cand" ]]; then
              echo "No index file found under dist. Dist tree:"
              find dist -maxdepth 5 -print || true
              exit 1
            fi
            PUBLISH_DIR="$(dirname "$cand")"
            if [[ "${cand##*/}" == "index.csr.html" ]]; then
              cp "$cand" "$PUBLISH_DIR/index.html"
            fi
          fi

          echo "PUBLISH_DIR=$PUBLISH_DIR" >> "$GITHUB_OUTPUT"
          cp "$PUBLISH_DIR/index.html" "$PUBLISH_DIR/404.html"
          touch "$PUBLISH_DIR/.nojekyll"
          echo "Resolved publish dir: $PUBLISH_DIR"
          ls -la "$PUBLISH_DIR"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.publishdir.outputs.PUBLISH_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
